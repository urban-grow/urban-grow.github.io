function waitForLoad(selector) {
    return new Promise((resolve)=>{
        const interval = setInterval(()=>{
            const el = document.querySelector(selector);
            if (el) {
                clearInterval(interval);
                resolve(el);
            }
        }, 20);
    });
}
function onImageLoad(image, callback) {
    if (image.complete) {
        callback(image);
    } else {
        image.addEventListener('load', ()=>callback(image));
    }
}
const IS_MOBILE = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
async function parallax() {
    const elements = [
        ...document.querySelectorAll('.parallax')
    ];
    for (const el of elements){
        el.style.backgroundAttachment = 'fixed';
    }
}
if (!IS_MOBILE) parallax();
async function homeAnimation() {
    const bg = await waitForLoad('.title-bg-image');
    bg.style.filter = 'blur(0px) saturate(0.7)';
    setTimeout(()=>{
        bg.style.transition = 'filter 4s ease-in-out';
        bg.style.filter = 'blur(6px) saturate(1.0) brightness(0.6) contrast(0.8)';
    }, 1000);
    const logo = await waitForLoad('#hero-logo');
    logo.style.opacity = '0';
    onImageLoad(logo, ()=>{
        setTimeout(()=>{
            logo.style.transition = 'opacity 1.5s ease-out';
            logo.style.opacity = '1';
        }, 20);
    });
}
if (!IS_MOBILE) homeAnimation();
function gotoRegister() {
    window.location.href = '../register';
}
async function initializeComplexTeam() {
    const teamSection = await waitForLoad('#team');
    let teamScrollAnim = 0;
    let teamScrollTarget = 0;
    let teamScrollExtraInertia = 0;
    let notchLimiter = 0;
    function scrollTeamBy(amount) {
        teamScrollTarget += amount / window.innerHeight;
        notchLimiter += Math.abs(amount * 0.1) / (1 + notchLimiter);
    }
    function deltaLerp(a, b, i, delta) {
        let realI = i / delta;
        return a * (1 - realI) + b * realI;
    }
    teamSection.addEventListener('wheel', (e)=>{
        e.preventDefault();
        scrollTeamBy(-(e.deltaY + e.deltaX));
    });
    const touches = {};
    teamSection.addEventListener('pointerdown', (e)=>{
        touches[0] = [
            e.clientX,
            0
        ];
    });
    teamSection.addEventListener('pointerup', (e)=>{
        teamScrollExtraInertia -= touches[0][1];
        delete touches[0];
    });
    teamSection.addEventListener('pointermove', (e)=>{
        e.preventDefault();
        const newX = e.clientX;
        const lastX = touches[0][0];
        const deltaX = (lastX - newX) * 2;
        touches[0][0] = newX;
        touches[0][1] = deltaX;
        scrollTeamBy(-deltaX);
    });
    teamSection.style.perspective = '800px';
    let lastFrameTime = Date.now();
    let smoothDelta = 1;
    const onAnimationFrame = ()=>{
        const wheelRadius = 700;
        const now = Date.now();
        const delta = now - lastFrameTime;
        lastFrameTime = now;
        smoothDelta = smoothDelta * 0.8 + 16 / Math.max(delta, 1) * 0.2;
        scrollTeamBy(teamScrollExtraInertia);
        teamScrollExtraInertia = deltaLerp(teamScrollExtraInertia, 0, 0.07, smoothDelta);
        teamScrollAnim = deltaLerp(teamScrollAnim, teamScrollTarget, 0.5, smoothDelta);
        let elIdx = 0;
        const cards = teamSection.children;
        const spacing = 2 * Math.PI / cards.length;
        for (const el of cards){
            const x = Math.sin(teamScrollAnim + elIdx * spacing) * wheelRadius / teamSection.clientWidth * 100;
            let y = (Math.cos(teamScrollAnim + elIdx * spacing) + 1) * 0.5;
            el.style.left = 50 + x + '%';
            el.style.transform = `translate(-50%, -50%) scale(${y}) rotate3d(0, 1, 0, ${x * 0.0007 * teamSection.clientWidth}deg)`;
            el.style.zIndex = Math.round(y * 100) + '';
            y *= 1.3;
            y -= 0.3;
            if (y < 0) y = 0;
            el.style.opacity = y + '';
            elIdx++;
        }
        const closestNotch = Math.round(teamScrollAnim / (2 * Math.PI) * teamSection.children.length) / teamSection.children.length * (2 * Math.PI);
        const distanceToNotch = Math.abs(teamScrollTarget - closestNotch);
        teamScrollTarget = deltaLerp(teamScrollTarget, closestNotch, distanceToNotch / spacing * 0.1 * (1 - Math.tanh(notchLimiter * 0.3)), smoothDelta);
        notchLimiter *= 0.8;
        window.requestAnimationFrame(onAnimationFrame);
    };
    window.requestAnimationFrame(onAnimationFrame);
}
initializeComplexTeam();

//# sourceMappingURL=data:application/json;base64,